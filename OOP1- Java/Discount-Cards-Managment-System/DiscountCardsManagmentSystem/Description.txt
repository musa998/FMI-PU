Hi, to start the application we should first create a “Owner’’ with is required for every card. I created a class “Card” that is a base abstract class and contains all mentioned properties that are common for all cards. This class is abstract because we don’t want to create a card and doesn’t know what type of card is it, and all it properties are private creating getters and setters for all of them with adhere Encapsulation. In ‘’Card’’ we have one abstract method called “getRealDiscountRate” that oblige all subclasses to override it and that adhere Abstraction because “Card” doesn’t know what is the implementation in the sub-classes. After creating the base class ‘’Card’’ now we can create our ‘’BronzeCard’’, ‘’SilverCard’’ and ‘’GoldCard’’ classes, they Inherit from ‘’Card’’ and they all should override the abstract method “getRealDiscountRate” to get a specific  discount rate for each type of card. In ‘’main’’ we just need to create Car with owner and purchase value and give them to ‘’manageOrder’’ without creating a instance of  “PayDesk’’ because of marking ‘’manageOrder’’ static.
I made a few test cases to see if the output is right.
Thanks, Musa

